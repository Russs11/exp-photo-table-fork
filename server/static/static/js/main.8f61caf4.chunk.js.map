{"version":3,"sources":["containers/Container.js","containers/Header.js","components/header/Logo.js","components/header/Menu.js","components/header/MenuItem.js","containers/Main.js","components/main/Workplace.js","components/main/WorkplaceItemDataBtn.js","components/main/WorkplaceItemNew.js","components/main/Gallery.js","components/modal/LighteningBackground.js","components/header/MenuBtns.js","components/header/MenuBtnsCheckBtn.js","components/header/MenuBtnsCloseBtn.js","components/modal/ModalHeader.js","components/modal/ModalContentEmployeeItem.js","components/modal/ModalContent.js","components/modal/ModalContainer.js","containers/Modal.js","components/main/GalleryItem.js","services/forApp/fAddDownloadedImagesToGallery.js","components/main/WorkplaceItem.js","services/forApp/fAddSelectedImagesToGallery.js","App.js","reportWebVitals.js","index.js"],"names":["Container","children","className","Header","Logo","Menu","MenuItem","type","notActive","setDownloadedImages","galleryImages","photoTableData","modalProperties","setModalProperties","localModalProperties","useContext","modalDataContext","event","a","preventDefault","sectionsArr","length","numbOMP","factOMP","adressOMP","dateForDoc","unit","kusp","frontSide","officialStatus","officialName","executor","note","push","properties","page","margin","top","right","bottom","left","footers","default","Footer","Paragraph","alignment","AlignmentType","CENTER","TextRun","text","font","size","bold","JUSTIFIED","thematicBreak","break","indent","firstLine","i","Math","round","tempParagraphArr","j","fetch","urlImg","then","r","blob","ImageRun","data","transformation","orientation","width","height","textImg","headers","PageNumber","CURRENT","doc","Document","title","sections","Packer","toBlob","saveAs","console","log","href","onClick","multiple","accept","input","document","querySelector","click","addEventListener","change","imagedata","files","name","url","URL","createObjectURL","removeEventListener","isOpen","tempGalleryImages","splice","indexImgInGallery","setGalleryImages","nameImg","Main","Workplace","WorkplaceItemDataBtn","clickHandler","prev","dateOMP","WorkplaceItemNew","currentGalleryImage","downloadedImages","onDragOver","onDragEnter","target","classList","add","onDragLeave","remove","onDrop","arr","Gallery","LighteningBackground","MenuBtns","MenuBtnsCheckBtn","cut","MenuBtnsCloseBtn","setphotoTableData","ModalHeader","ModalContentEmployeeItem","ModalContent","useState","zoom","editorData","setEditorData","canvas","setCanvas","useEffect","getImage","toDataURL","res","src","alt","onChange","setSettings","value","settings","executors","map","item","index","str","rows","placeholder","date","Date","getDate","getMonth","getFullYear","ref","editor","image","border","color","scale","rotate","step","min","max","ModalContainer","onDoubleClick","Modal","GalleryItem","hiden","setCurrentGalleryImage","shortName","substr","dbClickHandler","dragStartHandler","setTimeout","dragEndHandler","find","onDragStart","onDragEnd","draggable","addDownloadedImagesToArrforGallery","arrDownloadedImages","forEach","isHasInGalleryImages","img","WorkplaceItem","backgroundImage","style","addSelectedImagesToArrForGallery","arrGalleryImages","unshift","createContext","App","addDownloadedImagesToArrForGallery","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8f61caf4.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Container.css\";\r\n\r\nconst Container = ({ children }) => (\r\n    <div className=\"top-container\">\r\n        {children}\r\n    </div>\r\n);\r\n\r\nexport default Container;","import React from 'react';\r\nimport \"./Header.css\";\r\n\r\nconst Header = ({ children }) => (\r\n    <div className=\"header-wrapper\">\r\n        <div className=\"header\">\r\n            {children}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\nimport \"./Logo.css\";\r\n\r\nconst Logo = ({ children }) => (\r\n    <div className=\"logo\">{children}</div>\r\n);\r\n\r\nexport default Logo;","import React from 'react';\r\nimport \"./Menu.css\";\r\n\r\nconst Menu = ({ children }) => (\r\n    <div className=\"menu\">{children}</div>\r\n);\r\n\r\nexport default Menu;","import React, { useContext } from 'react';\r\nimport { modalDataContext } from '../../App';\r\nimport { Document, Packer, Paragraph, Header, Footer, TextRun, AlignmentType, PageNumber, ImageRun } from \"docx\";\r\nimport { saveAs } from \"file-saver\";\r\nimport axios from \"axios\";\r\nimport \"./MenuItem.css\";\r\n\r\nconst MenuItem = ({ children, type, notActive, setDownloadedImages, galleryImages, photoTableData, modalProperties, setModalProperties }) => {\r\n\r\n  const localModalProperties = useContext(modalDataContext);\r\n\r\n  function loadImgs(event) {\r\n    event.preventDefault();\r\n    const input = document.querySelector('.file');\r\n    function change() {\r\n      const imagedata = [];\r\n\r\n      for (let i = 0; i < input.files.length; i++) {\r\n        imagedata.push({ name: input.files[i].name, url: URL.createObjectURL(input.files[i]) });\r\n      }\r\n\r\n      setDownloadedImages(imagedata)\r\n      input.removeEventListener('change', change);\r\n    }\r\n    input.click();\r\n    input.addEventListener('change', change);\r\n  }\r\n\r\n  function delImgFromPhotoTable(event) {\r\n    event.preventDefault()\r\n\r\n    const tempGalleryImages = [...localModalProperties.galleryImages];\r\n    tempGalleryImages.splice(localModalProperties.modalProperties.indexImgInGallery, 1);\r\n    localModalProperties.setGalleryImages(tempGalleryImages);\r\n\r\n    localModalProperties.setModalProperties(() => {\r\n      return {\r\n        isOpen: false,\r\n        type: null,\r\n        nameImg: null,\r\n        urlImg: null,\r\n        textImg: null,\r\n        indexImgInGallery: null\r\n      }\r\n    });\r\n  }\r\n\r\n  function forCutPhoto(event) {\r\n    event.preventDefault();\r\n\r\n    localModalProperties.setModalProperties(() => {\r\n      return {\r\n        ...localModalProperties.modalProperties,\r\n        type: 'cutPhoto'\r\n      }\r\n    });\r\n  }\r\n\r\n  async function convertToMicrosoftWord(event) {\r\n    event.preventDefault();\r\n\r\n    const sectionsArr = [];\r\n\r\n    if (\r\n      galleryImages.length &&\r\n      photoTableData.numbOMP &&\r\n      photoTableData.factOMP &&\r\n      photoTableData.adressOMP &&\r\n      photoTableData.dateForDoc &&\r\n      photoTableData.unit &&\r\n      photoTableData.kusp\r\n    ) {\r\n      let frontSide = false;\r\n      let officialStatus = 'специалист';\r\n      let officialName = photoTableData.executor;\r\n      let note = 'Примечание: для изготовления фототаблицы использовались цифровая фотокамера CANON Power Shot SX540 HS со встроенной фотовспышкой, карта памяти ADATA 4 GB, ПЭВМ, МФУ Canon MF421dw.';\r\n\r\n      //Титульная страница\r\n      sectionsArr.push(\r\n        {\r\n          properties: {\r\n            page: {\r\n              margin: { top: '1cm', right: '1cm', bottom: '1cm', left: '4cm' }\r\n            }\r\n          },\r\n          footers: {\r\n            default: new Footer({\r\n              children: [\r\n                new Paragraph(\r\n                  {\r\n                    alignment: AlignmentType.CENTER,\r\n                    children: [\r\n                      new TextRun({\r\n                        text: `${officialStatus} _______________ ${officialName}`,\r\n                        font: \"Times New Roman\",\r\n                        size: 24,\r\n                      })\r\n                    ]\r\n                  }\r\n                ),\r\n              ],\r\n            })\r\n          },\r\n          children: [\r\n            new Paragraph(\r\n              {\r\n                alignment: AlignmentType.CENTER,\r\n                children: [\r\n                  new TextRun({\r\n                    text: \"МИНИСТЕРСТВО ВНУТРЕННИХ ДЕЛ\",\r\n                    bold: true,\r\n                    font: \"Times New Roman\",\r\n                    size: 28,\r\n                  })\r\n                ]\r\n              }\r\n            ),\r\n            new Paragraph(\r\n              {\r\n                alignment: AlignmentType.CENTER,\r\n                children: [\r\n                  new TextRun({\r\n                    text: \"ПО РЕСПУБЛИКЕ КРЫМ\",\r\n                    bold: true,\r\n                    font: \"Times New Roman\",\r\n                    size: 28,\r\n                  })\r\n                ]\r\n              }\r\n            ),\r\n            new Paragraph(\r\n              {\r\n                alignment: AlignmentType.CENTER,\r\n                children: [\r\n                  new TextRun({\r\n                    text: \"ЭКСПЕРТНО-КРИМИНАЛИСТИЧЕСКИЙ ЦЕНТР\",\r\n                    bold: true,\r\n                    font: \"Times New Roman\",\r\n                    size: 28,\r\n                  })\r\n                ]\r\n              }\r\n            ),\r\n            new Paragraph(\r\n              {\r\n                alignment: AlignmentType.JUSTIFIED,\r\n                thematicBreak: true,\r\n                children: [\r\n                  new TextRun({\r\n                    text: \"295006, г. Симферополь, ул. Павленко, 1а\",\r\n                    bold: false,\r\n                    font: \"Times New Roman\",\r\n                    size: 24,\r\n                    break: 2,\r\n                  }),\r\n                  new TextRun({\r\n                    text: \"                                   тел. (3652) 66-74-34\",\r\n                    bold: false,\r\n                    font: \"Times New Roman\",\r\n                    size: 24,\r\n                  })\r\n                ]\r\n              }\r\n            ),\r\n            new Paragraph(\r\n              {\r\n                alignment: AlignmentType.CENTER,\r\n                children: [\r\n                  new TextRun({\r\n                    text: \"ФОТОТАБЛИЦА\",\r\n                    bold: true,\r\n                    font: \"Times New Roman\",\r\n                    size: 36,\r\n                    break: 2,\r\n                  })\r\n                ]\r\n              }\r\n            ),\r\n            new Paragraph(\r\n              {\r\n                alignment: AlignmentType.CENTER,\r\n                children: [\r\n                  new TextRun({\r\n                    font: \"Times New Roman\",\r\n                    size: 24,\r\n                    break: 1,\r\n                  })\r\n                ]\r\n              }\r\n            ),\r\n            new Paragraph(\r\n              {\r\n                alignment: AlignmentType.JUSTIFIED,\r\n                indent: { firstLine: 721 },\r\n                children: [\r\n                  new TextRun({\r\n                    text: `к протоколу осмотра места происшествия от ${photoTableData.dateForDoc} по факту ${photoTableData.factOMP} по адресу: ${photoTableData.adressOMP}.`,\r\n                    font: \"Times New Roman\",\r\n                    size: 24,\r\n                  })\r\n                ]\r\n              }\r\n            ),\r\n          ],\r\n        }\r\n      );\r\n\r\n      //Страницы с фотографиями\r\n      for (let i = 0; i < Math.round(galleryImages.length / 2); i++) {\r\n        if (!frontSide) {\r\n          const tempParagraphArr = [];\r\n\r\n          if (i === 0) {\r\n            for (let j = i; j < 2; j++) {\r\n              let blob = await fetch(galleryImages[j].urlImg).then(r => r.blob());\r\n              tempParagraphArr.push(\r\n                new Paragraph(\r\n                  {\r\n                    alignment: AlignmentType.CENTER,\r\n                    children: [\r\n                      new TextRun({\r\n                        font: \"Times New Roman\",\r\n                        size: 24,\r\n                        break: 1,\r\n                      }),\r\n                      new ImageRun({\r\n                        data: blob,\r\n                        transformation: galleryImages[j].orientation === 'vertical' ? {\r\n                          width: 340,\r\n                          height: 454,\r\n                        } : {\r\n                          width: 454,\r\n                          height: 340,\r\n                        },\r\n\r\n                      }),\r\n                    ]\r\n                  }\r\n                ),\r\n                new Paragraph(\r\n                  {\r\n                    indent: galleryImages[j].orientation === 'vertical' ? { firstLine: 1988 } : { firstLine: 1136 },\r\n                    children: [\r\n                      new TextRun({\r\n                        text: `Фото №${j + 1}. `,\r\n                        font: \"Times New Roman\",\r\n                        size: 26,\r\n                        bold: true,\r\n                      }),\r\n                      new TextRun({\r\n                        text: galleryImages[j].textImg,\r\n                        font: \"Times New Roman\",\r\n                        size: 26,\r\n                      }),\r\n                    ]\r\n                  }\r\n                ),\r\n              )\r\n            }\r\n          }\r\n          if (i > 0) {\r\n            for (let j = i + i; j < (i + i + 2); j++) {\r\n              if (galleryImages[j]?.urlImg) {\r\n                let blob = await fetch(galleryImages[j].urlImg).then(r => r.blob());\r\n                tempParagraphArr.push(\r\n                  new Paragraph(\r\n                    {\r\n                      alignment: AlignmentType.CENTER,\r\n                      children: [\r\n                        new TextRun({\r\n                          font: \"Times New Roman\",\r\n                          size: 24,\r\n                          break: 1,\r\n                        }),\r\n                        new ImageRun({\r\n                          data: blob,\r\n                          transformation: galleryImages[j].orientation === 'vertical' ? {\r\n                            width: 340,\r\n                            height: 454,\r\n                          } : {\r\n                            width: 454,\r\n                            height: 340,\r\n                          },\r\n\r\n                        }),\r\n                      ]\r\n                    }\r\n                  ),\r\n                  new Paragraph(\r\n                    {\r\n                      indent: galleryImages[j].orientation === 'vertical' ? { firstLine: 1988 } : { firstLine: 1136 },\r\n                      children: [\r\n                        new TextRun({\r\n                          text: `Фото №${j + 1}. `,\r\n                          font: \"Times New Roman\",\r\n                          size: 26,\r\n                          bold: true,\r\n                        }),\r\n                        new TextRun({\r\n                          text: galleryImages[j].textImg,\r\n                          font: \"Times New Roman\",\r\n                          size: 26,\r\n                        }),\r\n                      ]\r\n                    }\r\n                  ),\r\n                )\r\n              }\r\n            }\r\n          }\r\n\r\n          sectionsArr.push(\r\n            {\r\n              properties: {\r\n                page: {\r\n                  margin: { top: '1cm', right: '4cm', bottom: '1cm', left: '1cm' }\r\n                }\r\n              },\r\n              headers: {\r\n                default: new Header({\r\n                  children: [\r\n                    new Paragraph(\r\n                      {\r\n                        alignment: AlignmentType.CENTER,\r\n                        children: [\r\n                          new TextRun({\r\n                            children: [PageNumber.CURRENT],\r\n                            font: \"Times New Roman\",\r\n                            size: 24,\r\n                          })\r\n                        ]\r\n                      }\r\n                    ),\r\n                  ],\r\n                }),\r\n              },\r\n              footers: {\r\n                default: new Footer({\r\n                  children: [\r\n                    new Paragraph(\r\n                      {\r\n                        alignment: AlignmentType.CENTER,\r\n                        children: [\r\n                          new TextRun({\r\n                            text: `${officialStatus} _______________ ${officialName}`,\r\n                            font: \"Times New Roman\",\r\n                            size: 24,\r\n                          })\r\n                        ]\r\n                      }\r\n                    ),\r\n                  ],\r\n                })\r\n              },\r\n              children: tempParagraphArr,\r\n            }\r\n          );\r\n\r\n          frontSide = !frontSide;\r\n          continue;\r\n        }\r\n\r\n        if (frontSide) {\r\n          const tempParagraphArr = [];\r\n\r\n          if (i > 0) {\r\n            for (let j = i + i; j < (i + i + 2); j++) {\r\n              if (galleryImages[j]?.urlImg) {\r\n                let blob = await fetch(galleryImages[j].urlImg).then(r => r.blob());\r\n                tempParagraphArr.push(\r\n                  new Paragraph(\r\n                    {\r\n                      alignment: AlignmentType.CENTER,\r\n                      children: [\r\n                        new TextRun({\r\n                          font: \"Times New Roman\",\r\n                          size: 24,\r\n                          break: 1,\r\n                        }),\r\n                        new ImageRun({\r\n                          data: blob,\r\n                          transformation: galleryImages[j].orientation === 'vertical' ? {\r\n                            width: 340,\r\n                            height: 454,\r\n                          } : {\r\n                            width: 454,\r\n                            height: 340,\r\n                          },\r\n\r\n                        }),\r\n                      ]\r\n                    }\r\n                  ),\r\n                  new Paragraph(\r\n                    {\r\n                      indent: galleryImages[j].orientation === 'vertical' ? { firstLine: 1988 } : { firstLine: 1136 },\r\n                      children: [\r\n                        new TextRun({\r\n                          text: `Фото №${j + 1}. `,\r\n                          font: \"Times New Roman\",\r\n                          size: 26,\r\n                          bold: true,\r\n                        }),\r\n                        new TextRun({\r\n                          text: galleryImages[j].textImg,\r\n                          font: \"Times New Roman\",\r\n                          size: 26,\r\n                        }),\r\n                      ]\r\n                    }\r\n                  ),\r\n                )\r\n              }\r\n            }\r\n          }\r\n\r\n          sectionsArr.push(\r\n            {\r\n              properties: {\r\n                page: {\r\n                  margin: { top: '1cm', right: '1cm', bottom: '1cm', left: '4cm' }\r\n                }\r\n              },\r\n              headers: {\r\n                default: new Header({\r\n                  children: [\r\n                    new Paragraph(\r\n                      {\r\n                        alignment: AlignmentType.CENTER,\r\n                        children: [\r\n                          new TextRun({\r\n                            children: [PageNumber.CURRENT],\r\n                            font: \"Times New Roman\",\r\n                            size: 24,\r\n                          })\r\n                        ]\r\n                      }\r\n                    ),\r\n                  ],\r\n                }),\r\n              },\r\n              footers: {\r\n                default: new Footer({\r\n                  children: [\r\n                    new Paragraph(\r\n                      {\r\n                        alignment: AlignmentType.CENTER,\r\n                        children: [\r\n                          new TextRun({\r\n                            text: `${officialStatus} _______________ ${officialName}`,\r\n                            font: \"Times New Roman\",\r\n                            size: 24,\r\n                          })\r\n                        ]\r\n                      }\r\n                    ),\r\n                  ],\r\n                })\r\n              },\r\n              children: tempParagraphArr,\r\n            }\r\n          );\r\n\r\n          frontSide = !frontSide;\r\n          continue;\r\n        }\r\n      }\r\n\r\n      //Примечание\r\n      if (frontSide) {\r\n        sectionsArr.push(\r\n          {\r\n            properties: {\r\n              page: {\r\n                margin: { top: '1cm', right: '1cm', bottom: '1cm', left: '4cm' }\r\n              }\r\n            },\r\n            footers: {\r\n              default: new Footer({\r\n                children: [\r\n                  new Paragraph(\r\n                    {\r\n                      alignment: AlignmentType.CENTER,\r\n                      children: [\r\n                        new TextRun({\r\n                          text: `${officialStatus} _______________ ${officialName}`,\r\n                          font: \"Times New Roman\",\r\n                          size: 24,\r\n                        })\r\n                      ]\r\n                    }\r\n                  ),\r\n                ],\r\n              })\r\n            },\r\n            children: [\r\n              new Paragraph(\r\n                {\r\n                  alignment: AlignmentType.JUSTIFIED,\r\n                  children: [\r\n                    new TextRun({\r\n                      text: note,\r\n                      font: \"Times New Roman\",\r\n                      size: 26,\r\n                    })\r\n                  ]\r\n                }\r\n              )\r\n            ],\r\n          }\r\n        );\r\n      } else {\r\n        sectionsArr.push(\r\n          {\r\n            properties: {\r\n              page: {\r\n                margin: { top: '1cm', right: '4cm', bottom: '1cm', left: '1cm' }\r\n              }\r\n            },\r\n            footers: {\r\n              default: new Footer({\r\n                children: [\r\n                  new Paragraph(\r\n                    {\r\n                      alignment: AlignmentType.CENTER,\r\n                      children: [\r\n                        new TextRun({\r\n                          text: `${officialStatus} _______________ ${officialName}`,\r\n                          font: \"Times New Roman\",\r\n                          size: 24,\r\n                        })\r\n                      ]\r\n                    }\r\n                  ),\r\n                ],\r\n              })\r\n            },\r\n            children: [\r\n              new Paragraph(\r\n                {\r\n                  alignment: AlignmentType.JUSTIFIED,\r\n                  children: [\r\n                    new TextRun({\r\n                      text: note,\r\n                      font: \"Times New Roman\",\r\n                      size: 26,\r\n                    })\r\n                  ]\r\n                }\r\n              )\r\n            ],\r\n          }\r\n        );\r\n      }\r\n    }\r\n\r\n    const doc = new Document({\r\n      title: `${photoTableData.numbOMP} - ${photoTableData.unit} - КУСП №${photoTableData.kusp} - ${photoTableData.executor}`,\r\n      sections: sectionsArr\r\n    });\r\n\r\n\r\n\r\n\r\n    Packer.toBlob(doc).then(blob => {\r\n      saveAs(blob, `${photoTableData.numbOMP} ${photoTableData.unit} КУСП №${photoTableData.kusp} ${photoTableData.executor}.docx`);\r\n      console.log(\"Document created successfully\");\r\n    });\r\n  }\r\n\r\n  function forSetSettingsModal(event) {\r\n    event.preventDefault();\r\n\r\n    setModalProperties(() => {\r\n      return {\r\n        ...modalProperties,\r\n        isOpen: true,\r\n        type: 'setSettings'\r\n      }\r\n    });\r\n  }\r\n  async function loadSettings(event) {\r\n    event.preventDefault();\r\n    const { data } = await axios.get('http://localhost:4000/app-get-settings');\r\n    console.log('message: ', data);\r\n  }\r\n  async function saveSettings(event) {\r\n    event.preventDefault();\r\n    const d = { note: \"Примечание\", executors: [\"Д.С. Ежель\"], unit: \"№15 Симферопольский\" };\r\n    const { data } = await axios.post('http://localhost:4000/app-set-settings', d);\r\n    // console.log('message: ', data);\r\n  }\r\n\r\n  if (notActive) {\r\n    return (\r\n      <div className=\"menu-item menu-not-active\"><a href=\"/\" onClick={(event) => { event.preventDefault() }}>{children}</a></div>\r\n    );\r\n  }\r\n  if (type === 'forInputFile') {\r\n    return (\r\n      <div className=\"menu-item input-file\">\r\n        <input type=\"file\" className=\"file\" multiple={true} accept=\"image/*\"></input>\r\n        <a href=\"/\" onClick={loadImgs}>{children}</a>\r\n      </div>\r\n    );\r\n  }\r\n  if (type === 'forConvertToMicrosoftWord') {\r\n    return (\r\n      <div className=\"menu-item\" onClick={convertToMicrosoftWord}><a href=\"/\" >{children}</a></div>\r\n    );\r\n  }\r\n  if (type === 'forSettings') {\r\n    return (\r\n      <div className=\"menu-item\" onClick={forSetSettingsModal}><a href=\"/\" >{children}</a></div>\r\n    );\r\n  }\r\n\r\n  if (type === 'forDelImgFromPhotoTable') {\r\n    return (\r\n      <div className=\"menu-item\" onClick={delImgFromPhotoTable}><a href=\"/\" >{children}</a></div>\r\n    );\r\n  }\r\n  if (type === 'forCutPhoto') {\r\n    return (\r\n      <div className=\"menu-item\" onClick={forCutPhoto}><a href=\"/\" >{children}</a></div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"menu-item\"><a href=\"/\" >{children}</a></div>\r\n  );\r\n}\r\n\r\nexport default MenuItem;","import React from 'react';\r\nimport \"./Main.css\";\r\n\r\nconst Main = ({ children }) => (\r\n    <div className=\"main-wrapper\">\r\n        <div className=\"main\">\r\n            {children}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Main;","import React from 'react';\r\nimport \"./Workplace.css\";\r\n\r\nconst Workplace = ({ children }) => (\r\n    <div className=\"workplace\">{children}</div>\r\n);\r\n\r\nexport default Workplace;","import React from 'react';\r\n\r\nconst WorkplaceItemDataBtn = ({ photoTableData, setModalProperties }) => {\r\n\r\n  function clickHandler() {\r\n    setModalProperties(prev => {\r\n      return (\r\n        {\r\n          ...prev,\r\n          isOpen: true,\r\n          type: \"setPhotoTableData\"\r\n        }\r\n      );\r\n    }\r\n    )\r\n  };\r\n\r\n  if (\r\n    photoTableData.numbOMP !== null ||\r\n    photoTableData.factOMP !== null ||\r\n    photoTableData.adressOMP !== null ||\r\n    photoTableData.dateOMP !== null ||\r\n    photoTableData.unit !== \"№15 Симферопольский\" ||\r\n    photoTableData.kusp !== null ||\r\n    photoTableData.executor !== \"Д.С. Ежель\") {\r\n    return <div\r\n      className=\"workplace-data-btn\"\r\n      onClick={clickHandler}\r\n    >\r\n      Изменить данные фототаблицы\r\n    </div>\r\n  }\r\n\r\n  return <div\r\n    className=\"workplace-data-btn\"\r\n    onClick={clickHandler}\r\n  >Ввести данные фототаблицы</div>;\r\n}\r\n\r\nexport default WorkplaceItemDataBtn;","import React from 'react';\r\n\r\nconst WorkplaceItemNew = ({ name, currentGalleryImage, galleryImages, setGalleryImages, downloadedImages, setDownloadedImages }) => {\r\n\r\n    function dragover(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    function dragenter(event) {\r\n        event.target.classList.add('workplace-item-new-hovered');\r\n    }\r\n\r\n    function dragleave(event) {\r\n        event.target.classList.remove('workplace-item-new-hovered');\r\n    }\r\n\r\n    function dragdrop(event) {\r\n        event.preventDefault();\r\n        event.target.classList.remove('workplace-item-new-hovered');\r\n\r\n        const arr = [...galleryImages];\r\n        arr.push(currentGalleryImage);\r\n\r\n        setGalleryImages(arr);\r\n    }\r\n\r\n    return (\r\n        <div className=\"workplace-item-new\"\r\n            onDragOver={dragover}\r\n            onDragEnter={dragenter}\r\n            onDragLeave={dragleave}\r\n            onDrop={dragdrop}\r\n        >\r\n            <div className=\"workplace-item-name\" >{name}</div>\r\n            <div className=\"workplace-item-plus\" ></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WorkplaceItemNew;","import React from 'react';\r\nimport \"./Gallery.css\";\r\n\r\nconst Gallery = ({ children }) => {\r\n    return (<div className=\"gallery\">{children}</div>);\r\n\r\n}\r\n\r\nexport default Gallery;","import React, { useContext } from 'react';\r\nimport { modalDataContext } from '../../App';\r\nimport './LighteningBackground.css';\r\n\r\nconst LighteningBackground = () => {\r\n    const localModalProperties = useContext(modalDataContext);\r\n\r\n    function clickHandler() {\r\n        localModalProperties.setModalProperties(() => {\r\n            return {\r\n                isOpen: false,\r\n                type: null,\r\n                nameImg: null,\r\n                urlImg: null\r\n            }\r\n        });\r\n    }\r\n\r\n    return <div className=\"lightening-background\" onClick={clickHandler}></div>;\r\n}\r\n\r\nexport default LighteningBackground;","import React from 'react';\r\nimport \"./MenuBtns.css\";\r\n\r\nconst MenuBtns = ({ children }) => (\r\n    <div className=\"menu-btns\">{children}</div>\r\n);\r\n\r\nexport default MenuBtns;","import React, { useContext } from 'react';\r\nimport { modalDataContext } from '../../App';\r\nimport \"./MenuBtnsCheckBtn.css\";\r\n\r\n\r\n\r\nconst MenuBtnsCheckBtn = () => {\r\n\r\n  const localModalProperties = useContext(modalDataContext);\r\n\r\n  let clickHandler;\r\n\r\n  if (localModalProperties.modalProperties.isOpen &&\r\n    localModalProperties.modalProperties.type === \"setPhotoTableData\") {\r\n    clickHandler = () => {\r\n      localModalProperties.setModalProperties(() => {\r\n        return {\r\n          isOpen: false,\r\n          type: null,\r\n          nameImg: null,\r\n          urlImg: null,\r\n          textImg: null,\r\n          indexImgInGallery: null\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  if (localModalProperties.modalProperties.isOpen &&\r\n    localModalProperties.modalProperties.type === \"setGalleryImageData\") {\r\n    clickHandler = () => {\r\n      \r\n      const tempGalleryImages = [...localModalProperties.galleryImages];\r\n      tempGalleryImages[localModalProperties.modalProperties.indexImgInGallery].textImg = localModalProperties.modalProperties.textImg;\r\n      localModalProperties.setGalleryImages(tempGalleryImages);\r\n      \r\n      localModalProperties.setModalProperties(() => {\r\n        return {\r\n          isOpen: false,\r\n          type: null,\r\n          nameImg: null,\r\n          urlImg: null,\r\n          textImg: null,\r\n          indexImgInGallery: null\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  if (localModalProperties.modalProperties.isOpen &&\r\n    localModalProperties.modalProperties.type === \"cutPhoto\") {\r\n    clickHandler = () => {\r\n      localModalProperties.setModalProperties((prev) => {\r\n        return { ...prev, cut: true }\r\n      });\r\n    }\r\n  }\r\n  \r\n  return (<div className=\"check-btn\" onClick={clickHandler}></div>)\r\n}\r\n\r\nexport default MenuBtnsCheckBtn;","import React, { useContext } from 'react';\r\nimport { modalDataContext } from '../../App';\r\nimport \"./MenuBtnsCloseBtn.css\";\r\n\r\nconst MenuBtnsCloseBtn = () => {\r\n  const localModalProperties = useContext(modalDataContext);\r\n  let clickHandler;\r\n\r\n  if (localModalProperties.modalProperties.isOpen &&\r\n    localModalProperties.modalProperties.type === \"setPhotoTableData\") {\r\n    clickHandler = () => {\r\n      localModalProperties.setModalProperties(() => {\r\n        return {\r\n          isOpen: false,\r\n          type: null,\r\n          nameImg: null,\r\n          urlImg: null,\r\n          textImg: null,\r\n          indexImgInGallery: null\r\n        }\r\n      });\r\n      localModalProperties.setphotoTableData(() => {\r\n        return {\r\n          numbOMP: null,\r\n          factOMP: null,\r\n          adressOMP: null,\r\n          dateOMP: null,\r\n          dateForDoc: null,\r\n          unit: null,\r\n          kusp: null,\r\n          executor: \"Ежель Д.С.\"\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  if (localModalProperties.modalProperties.isOpen &&\r\n    localModalProperties.modalProperties.type === \"setGalleryImageData\") {\r\n    clickHandler = () => {\r\n      localModalProperties.setModalProperties(() => {\r\n        return {\r\n          isOpen: false,\r\n          type: null,\r\n          nameImg: null,\r\n          urlImg: null,\r\n          textImg: null,\r\n          indexImgInGallery: null\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  if (localModalProperties.modalProperties.isOpen &&\r\n    localModalProperties.modalProperties.type === \"preview\") {\r\n    clickHandler = () => {\r\n      localModalProperties.setModalProperties(() => {\r\n        return {\r\n          isOpen: false,\r\n          type: null,\r\n          nameImg: null,\r\n          urlImg: null,\r\n          textImg: null,\r\n          indexImgInGallery: null\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  return (<div className=\"close-btn\" onClick={clickHandler}></div>)\r\n}\r\n\r\nexport default MenuBtnsCloseBtn;","import React, { useContext } from 'react';\r\nimport Logo from '../header/Logo';\r\nimport Menu from '../header/Menu';\r\nimport MenuBtns from '../header/MenuBtns';\r\nimport MenuItem from '../header/MenuItem';\r\nimport MenuBtnsCheckBtn from '../header/MenuBtnsCheckBtn';\r\nimport MenuBtnsCloseBtn from '../header/MenuBtnsCloseBtn';\r\nimport { modalDataContext } from '../../App';\r\nimport './ModalHeader.css'\r\n\r\nconst ModalHeader = ({ name }) => {\r\n\r\n  const localModalProperties = useContext(modalDataContext);\r\n\r\n  if (localModalProperties.modalProperties.type === \"preview\") {\r\n    return (\r\n      <div className=\"modal-header\">\r\n        <Logo>{localModalProperties.modalProperties.nameImg}</Logo>\r\n        <Menu>\r\n          <MenuItem notActive={true}>Выделить область</MenuItem>\r\n          <MenuItem notActive={true}>Обрезать</MenuItem>\r\n          {/* <MenuItem notActive={true}>Удалить из списка</MenuItem> */}\r\n        </Menu>\r\n        <MenuBtns>\r\n          <MenuBtnsCloseBtn />\r\n        </MenuBtns>\r\n      </div>\r\n    );\r\n  }\r\n  if (localModalProperties.modalProperties.type === \"setPhotoTableData\") {\r\n    return (\r\n      <div className=\"modal-header\">\r\n        <Logo>{name}</Logo>\r\n        <MenuBtns>\r\n          <MenuBtnsCheckBtn />\r\n          <MenuBtnsCloseBtn />\r\n        </MenuBtns>\r\n      </div>\r\n    );\r\n  }\r\n  if (localModalProperties.modalProperties.type === \"cutPhoto\") {\r\n    return (\r\n      <div className=\"modal-header\">\r\n        <Logo>{name}</Logo>\r\n        <MenuBtns>\r\n          <MenuBtnsCheckBtn />\r\n          <MenuBtnsCloseBtn />\r\n        </MenuBtns>\r\n      </div>\r\n    );\r\n  }\r\n  if (localModalProperties.modalProperties.type === \"setGalleryImageData\") {\r\n    return (\r\n      <div className=\"modal-header\">\r\n        <Logo>{name}</Logo>\r\n        <Menu>\r\n          <MenuItem type={'forDelImgFromPhotoTable'}>Удалить из таблицы иллюстраций</MenuItem>\r\n          <MenuItem type={'forCutPhoto'}>Обрезать</MenuItem>\r\n        </Menu>\r\n        <MenuBtns>\r\n          <MenuBtnsCheckBtn />\r\n          <MenuBtnsCloseBtn />\r\n        </MenuBtns>\r\n      </div>\r\n    );\r\n  }\r\n  if (localModalProperties.modalProperties.type === \"setSettings\") {\r\n    return (\r\n      <div className=\"modal-header\">\r\n        <Logo>{name}</Logo>\r\n        <MenuBtns>\r\n          <MenuBtnsCheckBtn />\r\n          <MenuBtnsCloseBtn />\r\n        </MenuBtns>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default ModalHeader;","import \"./ModalContentEmployeeItem.css\";\r\n\r\nconst ModalContentEmployeeItem = ({ name }) => {\r\n\r\n  return (\r\n    <div className=\"modal-content-grid-settings-list-item\">\r\n      <div className=\"modal-content-grid-settings-list-item-name\">{ name }</div>\r\n      <div className=\"modal-content-grid-settings-list-item-del-btn\"></div>\r\n    </div>\r\n  );\r\n}\r\nexport default ModalContentEmployeeItem;","import React, { useState, useEffect, useContext } from 'react';\r\nimport AvatarEditor from 'react-avatar-editor';\r\nimport ModalContentEmployeeItem from './ModalContentEmployeeItem';\r\nimport { modalDataContext } from '../../App';\r\nimport './ModalContent.css'\r\nimport './ModalContentGrid.css'\r\n\r\nconst ModalContent = () => {\r\n\r\n  const localModalProperties = useContext(modalDataContext);\r\n\r\n  const [editorData, setEditorData] = useState({\r\n    width: 700,\r\n    height: 525,\r\n    zoom: 1\r\n  });\r\n  const [canvas, setCanvas] = useState();\r\n\r\n  function onClickSave() {\r\n\r\n    fetch(canvas.getImage().toDataURL())\r\n      .then(res => res.blob())\r\n      .then(blob => {\r\n        // console.log(URL.createObjectURL(blob));\r\n\r\n        const url = URL.createObjectURL(blob);\r\n\r\n        const tempGalleryImages = [...localModalProperties.galleryImages];\r\n        tempGalleryImages[localModalProperties.modalProperties.indexImgInGallery].urlImg = url;\r\n        localModalProperties.setGalleryImages(tempGalleryImages);\r\n        localModalProperties.setModalProperties((prev) => {\r\n          return {\r\n            ...prev,\r\n            urlImg: url\r\n          }\r\n        });\r\n      });\r\n\r\n    localModalProperties.setModalProperties((prev) => {\r\n      return {\r\n        ...prev,\r\n        type: \"setGalleryImageData\",\r\n        cut: false\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (localModalProperties.modalProperties.cut) {\r\n      onClickSave();\r\n    }\r\n  })\r\n\r\n  if (localModalProperties.modalProperties.type === \"preview\") {\r\n    return (\r\n      <div className=\"modal-content\">\r\n        <img src={localModalProperties.modalProperties.urlImg} alt={'test'}></img>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (localModalProperties.modalProperties.type === \"setSettings\") {\r\n    const changeNoteHandler = (event) => { localModalProperties.setSettings((prev) => { return ({ ...prev, note: event.target.value }) })}\r\n    const changeUnitHandler = (event) => { localModalProperties.setSettings((prev) => { return ({ ...prev, unit: event.target.value }) })}\r\n    return (\r\n      <div className=\"modal-content-grid\">\r\n        <div className=\"modal-content-grid-settings-container modal-content-grid-settings-note\">\r\n          <div className=\"modal-content-grid-settings-title\">Примечание</div>\r\n          <div className=\"modal-content-grid-settings-textarea\">\r\n            <textarea onChange={changeNoteHandler}></textarea>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-content-grid-settings-container modal-content-grid-settings-employee\">\r\n          <div className=\"modal-content-grid-settings-title\">ФИО нового сотрудника</div>\r\n          <div className=\"modal-content-grid-settings-input\">\r\n            <input type=\"text\"></input>\r\n            <div className=\"plus-btn\"></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-content-grid-settings-container modal-content-grid-settings-unit\">\r\n          <div className=\"modal-content-grid-settings-title\">Отделение</div>\r\n          <div className=\"modal-content-grid-settings-input\">\r\n            <input type=\"text\" onChange={changeUnitHandler}></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-content-grid-settings-employee-list\">\r\n          <div className=\"modal-content-grid-settings-title\">Список сотрудников</div>\r\n          <div className=\"modal-content-grid-settings-list\">\r\n            {localModalProperties.settings.executors.map((item, index) => {\r\n              return (<ModalContentEmployeeItem key={index} name={item} />)\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (localModalProperties.modalProperties.type === \"setPhotoTableData\") {\r\n\r\n    const changeNumbOMPHandler = () => {\r\n      const str = document.querySelector('.numbOMP');\r\n      localModalProperties.setphotoTableData((prev) => {\r\n        return ({\r\n          ...prev,\r\n          numbOMP: str.value\r\n        })\r\n      })\r\n    };\r\n    const changeFactOMPHandler = () => {\r\n      const str = document.querySelector('.factOMP');\r\n      localModalProperties.setphotoTableData((prev) => {\r\n        return ({\r\n          ...prev,\r\n          factOMP: str.value\r\n        })\r\n      })\r\n    };\r\n    const changeAdressOMPHandler = () => {\r\n      const str = document.querySelector('.adressOMP');\r\n      localModalProperties.setphotoTableData((prev) => {\r\n        return ({\r\n          ...prev,\r\n          adressOMP: str.value\r\n        })\r\n      })\r\n    };\r\n    const changeDateOMPHandler = () => {\r\n      const str = document.querySelector('.dateOMP');\r\n      const date = new Date(str.value)\r\n\r\n      localModalProperties.setphotoTableData((prev) => {\r\n        return ({\r\n          ...prev,\r\n          dateOMP: str.value,\r\n          dateForDoc: `${date.getDate() < 10 ? \"0\" + date.getDate() : date.getDate()}.${(date.getMonth() + 1) < 10 ? \"0\" + (date.getMonth() + 1) : date.getMonth() + 1}.${date.getFullYear()}`\r\n        })\r\n      })\r\n    };\r\n    const changeUnitHandler = () => {\r\n      const str = document.querySelector('.unit');\r\n      localModalProperties.setphotoTableData((prev) => {\r\n        return ({\r\n          ...prev,\r\n          unit: str.value\r\n        })\r\n      })\r\n    };\r\n    const changeKuspHandler = () => {\r\n      const str = document.querySelector('.kusp');\r\n      localModalProperties.setphotoTableData((prev) => {\r\n        return ({\r\n          ...prev,\r\n          kusp: str.value\r\n        })\r\n      })\r\n    };\r\n    const changeExecutorHandler = () => {\r\n      const str = document.querySelector('.executor');\r\n      localModalProperties.setphotoTableData((prev) => {\r\n        return ({\r\n          ...prev,\r\n          executor: str.value\r\n        })\r\n      })\r\n    };\r\n\r\n    return (\r\n      <div className=\"modal-content-data\">\r\n        <div className=\"modal-content-data-row\">\r\n          <div className=\"modal-content-data-cell\">\r\n            <div className=\"modal-content-title\">№ по журналу ОМП</div>\r\n            <input\r\n              type=\"number\"\r\n              className=\"numbOMP\"\r\n              onChange={changeNumbOMPHandler}\r\n              value={localModalProperties.photoTableData.numbOMP ?\r\n                localModalProperties.photoTableData.numbOMP :\r\n                ''}\r\n            ></input>\r\n          </div>\r\n          <div className=\"modal-content-data-cell\">\r\n            <div className=\"modal-content-title\">Факт проведения ОМП:</div>\r\n            <textarea\r\n              className=\"factOMP\"\r\n              onChange={changeFactOMPHandler}\r\n              rows={3}\r\n              placeholder=\"Укажите факт проведения ОМП...\"\r\n              value={\r\n                localModalProperties.photoTableData.factOMP ?\r\n                  localModalProperties.photoTableData.factOMP :\r\n                  ''}\r\n            />\r\n          </div>\r\n          <div className=\"modal-content-data-cell\">\r\n            <div className=\"modal-content-title\">Адрес проведения ОМП:</div>\r\n            <textarea\r\n              className=\"adressOMP\"\r\n              onChange={changeAdressOMPHandler}\r\n              rows={3}\r\n              placeholder=\"Укажите адрес проведения ОМП...\"\r\n              value={\r\n                localModalProperties.photoTableData.adressOMP ?\r\n                  localModalProperties.photoTableData.adressOMP :\r\n                  ''}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-content-data-row\">\r\n          <div className=\"modal-content-data-cell\">\r\n            <div className=\"modal-content-title\">Дата фототаблицы:</div>\r\n            <input\r\n              type=\"date\"\r\n              className=\"dateOMP\"\r\n              onChange={changeDateOMPHandler}\r\n              value={\r\n                localModalProperties.photoTableData.dateOMP ?\r\n                  localModalProperties.photoTableData.dateOMP :\r\n                  ''}\r\n            ></input>\r\n          </div>\r\n          <div className=\"modal-content-data-cell\">\r\n            <div className=\"modal-content-title\">Отделение</div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"unit\"\r\n              onChange={changeUnitHandler}\r\n              value={\r\n                localModalProperties.photoTableData.unit ?\r\n                  localModalProperties.photoTableData.unit :\r\n                  ''}\r\n            ></input>\r\n          </div>\r\n          <div className=\"modal-content-data-cell\">\r\n            <div className=\"modal-content-title\">КУСП</div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"kusp\"\r\n              onChange={changeKuspHandler}\r\n              value={\r\n                localModalProperties.photoTableData.kusp ?\r\n                  localModalProperties.photoTableData.kusp :\r\n                  ''}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-content-data-row\">\r\n          <div className=\"modal-content-data-cell\">\r\n            <div className=\"modal-content-title\">Исполнитель</div>\r\n            <select\r\n              className=\"executor\"\r\n              onChange={changeExecutorHandler}\r\n              value={\r\n                localModalProperties.photoTableData.executor ?\r\n                  localModalProperties.photoTableData.executor :\r\n                  ''}\r\n            >\r\n              <option>Д.С. Ежель</option>\r\n              <option>Д.Б. Атнагулов</option>\r\n              <option>А.В. Горбенко</option>\r\n              <option>С.В. Дубовой</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (localModalProperties.modalProperties.type === \"setGalleryImageData\") {\r\n\r\n    const changeIllustrationDescriptionHandler = () => {\r\n      const str = document.querySelector('.illustrationDescription');\r\n      localModalProperties.setModalProperties((prev) => {\r\n        return ({\r\n          ...prev,\r\n          textImg: str.value\r\n        })\r\n      })\r\n    };\r\n\r\n    return (\r\n      <div className=\"modal-content-data\">\r\n        <img src={localModalProperties.modalProperties.urlImg} alt={'test'}></img>\r\n        <div className=\"modal-content-title\">Описание:</div>\r\n        <textarea\r\n          className=\"illustrationDescription\"\r\n          onChange={changeIllustrationDescriptionHandler}\r\n          rows={5}\r\n          placeholder=\"Введите описание для иллюстрации...\"\r\n          value={\r\n            localModalProperties.modalProperties.textImg ?\r\n              localModalProperties.modalProperties.textImg :\r\n              ''}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (localModalProperties.modalProperties.type === \"cutPhoto\") {\r\n    const inputChangeHandler = (event) => {\r\n      setEditorData((prev) => {\r\n        return { ...prev, zoom: +event.target.value }\r\n      });\r\n    }\r\n    const orientationVerticalClickHandler = () => {\r\n      const tempGalleryImages = [...localModalProperties.galleryImages];\r\n      tempGalleryImages[localModalProperties.modalProperties.indexImgInGallery].orientation = 'vertical';\r\n      localModalProperties.setGalleryImages(tempGalleryImages);\r\n\r\n      setEditorData((prev) => {\r\n        return { ...prev, width: 393, height: 525 }\r\n      });\r\n    }\r\n    const orientationHorizontalClickHandler = () => {\r\n      const tempGalleryImages = [...localModalProperties.galleryImages];\r\n      tempGalleryImages[localModalProperties.modalProperties.indexImgInGallery].orientation = 'horizontal';\r\n      localModalProperties.setGalleryImages(tempGalleryImages);\r\n\r\n      setEditorData((prev) => {\r\n        return { ...prev, width: 700, height: 525 }\r\n      });\r\n    }\r\n\r\n    const setEditorRef = (editor) => {\r\n      setCanvas(editor);\r\n    };\r\n\r\n    return (\r\n      <div className=\"modal-content-data\">\r\n        <AvatarEditor\r\n          ref={setEditorRef}\r\n          image={localModalProperties.modalProperties.urlImg}\r\n          width={editorData.width}\r\n          height={editorData.height}\r\n          border={0}\r\n          color={[255, 255, 255, 0.8]} // RGBA\r\n          scale={editorData.zoom}\r\n          rotate={0}\r\n        />\r\n        <div className=\"modal-content-data-controls\">\r\n          <div className=\"modal-content-data-controls-orientation\">\r\n            <div className=\"modal-content-data-controls-orientation-title\">Ориентация:</div>\r\n            <div\r\n              className=\"modal-content-data-controls-orientation-vertical\"\r\n              onClick={orientationVerticalClickHandler}\r\n            >Вертикальная</div>\r\n            <div\r\n              className=\"modal-content-data-controls-orientation-horizontal\"\r\n              onClick={orientationHorizontalClickHandler}\r\n            >Горизонтальная</div>\r\n          </div>\r\n          <div className=\"modal-content-data-controls-zoom\">\r\n            <div className=\"modal-content-data-controls-zoom-title\">Увеличение:</div>\r\n            <div className=\"modal-content-data-controls-zoom-range\">\r\n              <input\r\n                type=\"range\"\r\n                step=\"0.1\"\r\n                min=\"1\"\r\n                max=\"2\"\r\n                value={editorData.zoom}\r\n                onChange={inputChangeHandler}\r\n              ></input>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default ModalContent;","import React, { useContext } from 'react';\r\nimport ModalHeader from './ModalHeader';\r\nimport ModalContent from './ModalContent';\r\nimport { modalDataContext } from '../../App';\r\nimport './ModalContainer.css';\r\n\r\nconst ModalContainer = () => {\r\n  const localModalProperties = useContext(modalDataContext);\r\n\r\n  function dbClickHandler() {\r\n    localModalProperties.setModalProperties(() => {\r\n      return {\r\n        isOpen: false,\r\n        type: null,\r\n        nameImg: null,\r\n        urlImg: null\r\n      }\r\n    });\r\n  }\r\n\r\n  if (localModalProperties.modalProperties.type === \"preview\") {\r\n    return (\r\n      <div className=\"modal-container\" onDoubleClick={dbClickHandler}>\r\n        <ModalHeader />\r\n        <ModalContent />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (localModalProperties.modalProperties.type === \"setPhotoTableData\") {\r\n    return (\r\n      <div className=\"modal-container set-photo-table-data\" >\r\n        <ModalHeader name={'Данные фототаблицы'} />\r\n        <ModalContent />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (localModalProperties.modalProperties.type === \"setGalleryImageData\") {\r\n    return (\r\n      <div className=\"modal-container\" >\r\n        <ModalHeader name={'Данные иллюстрации'} />\r\n        <ModalContent />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (localModalProperties.modalProperties.type === \"cutPhoto\") {\r\n    return (\r\n      <div className=\"modal-container\" >\r\n        <ModalHeader name={'Редактирование иллюстрации'} />\r\n        <ModalContent />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (localModalProperties.modalProperties.type === \"setSettings\") {\r\n    return (\r\n      <div className=\"modal-container\" >\r\n        <ModalHeader name={'Настройки'} />\r\n        <ModalContent />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalContainer;","import React, { useContext } from 'react';\r\nimport LighteningBackground from '../components/modal/LighteningBackground';\r\nimport ModalContainer from '../components/modal/ModalContainer';\r\nimport { modalDataContext } from '../App';\r\nimport './Modal.css';\r\n\r\nconst Modal = () => {\r\n  const localModalProperties = useContext(modalDataContext);\r\n\r\n  if (localModalProperties.modalProperties.isOpen) {\r\n    return (\r\n      <>\r\n        <LighteningBackground />\r\n        <ModalContainer />\r\n      </>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\n\r\nconst GalleryItem = ({ name, url, hiden, setModalProperties, setCurrentGalleryImage, galleryImages }) => {\r\n  let shortName = '';\r\n  if (name.length > 20) {\r\n    shortName = name.substr(0, 20) + '...'; // обрезаем слишком длинное имя файла\r\n  }\r\n\r\n  const dbClickHandler = (event) => {\r\n    event.preventDefault();\r\n    setModalProperties(() => {\r\n      return {\r\n        isOpen: true,\r\n        type: \"preview\",\r\n        nameImg: shortName ? shortName : name,\r\n        urlImg: url\r\n      }\r\n    });\r\n  }\r\n\r\n  const dragStartHandler = (event) => {\r\n    // event.target.classList.add('gallery-item-hold');\r\n    setTimeout(() => event.target.classList.add('gallery-item-hide'), 0);\r\n    setCurrentGalleryImage({ nameImg: name, urlImg: url, textImg: null });\r\n  }\r\n\r\n  const dragEndHandler = (event) => {\r\n    if (galleryImages.length === 0) {\r\n      event.target.classList.remove('gallery-item-hide');\r\n    }\r\n\r\n    let isFindedInGalleryImages = galleryImages.find(item => {\r\n      if (name === item.nameImg) return true;\r\n      return false;\r\n    })\r\n\r\n    if (!isFindedInGalleryImages) {\r\n      event.target.classList.remove('gallery-item-hide');\r\n    }\r\n\r\n    setCurrentGalleryImage({ nameImg: null, urlImg: null, textImg: null });\r\n  }\r\n  \r\n  if (hiden) {\r\n    return (\r\n      <div className=\"gallery-item gallery-item-hide\"\r\n        onDoubleClick={dbClickHandler}\r\n        onDragStart={dragStartHandler}\r\n        onDragEnd={dragEndHandler}\r\n        draggable=\"false\"\r\n      >\r\n        <div className=\"gallery-item-name\">{shortName ? shortName : name}</div>\r\n        <div className=\"gallery-item-img\">\r\n          <img\r\n            src={url}\r\n            alt={name}\r\n            draggable=\"false\"></img>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"gallery-item\"\r\n        onDoubleClick={dbClickHandler}\r\n        onDragStart={dragStartHandler}\r\n        onDragEnd={dragEndHandler}\r\n        draggable=\"true\"\r\n      >\r\n        <div className=\"gallery-item-name\">{shortName ? shortName : name}</div>\r\n        <div className=\"gallery-item-img\">\r\n          <img\r\n            src={url}\r\n            alt={name}\r\n            draggable=\"false\"></img>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default GalleryItem;","import GalleryItem from '../../components/main/GalleryItem';\r\n\r\nfunction addDownloadedImagesToArrforGallery(\r\n  downloadedImages, //массив загруженных изображений\r\n  arrDownloadedImages, //массив для хранения React элементов\r\n  galleryImages, //массив изображений выбранных для фототаблицы\r\n  setModalProperties, //сеттер со свойствами модального окна\r\n  setCurrentGalleryImage //сеттер со свойствами выьранного изображения\r\n) {\r\n  //Функция формирует массив с загруженными изображениями.\r\n\r\n  arrDownloadedImages = []; //Удаление изображений из массива\r\n\r\n  downloadedImages.forEach(item => {\r\n\r\n    //Проверка на наличие изображений в галерее и фототаблице\r\n    let isHasInGalleryImages = false;\r\n    if (galleryImages.length) {\r\n      galleryImages.forEach(img => {\r\n        if (item.name === img.nameImg) {\r\n          isHasInGalleryImages = true;\r\n        }\r\n      })\r\n    }\r\n\r\n    //Формирование массива с загруженными изображениями в зависимости от наличия изображений в галерее и фототаблице\r\n    if (isHasInGalleryImages) {\r\n      arrDownloadedImages.push(<GalleryItem\r\n        key={item.name}\r\n        name={item.name}\r\n        url={item.url}\r\n        hiden={true}\r\n        setModalProperties={setModalProperties}\r\n        setCurrentGalleryImage={setCurrentGalleryImage}\r\n        galleryImages={galleryImages}\r\n      />);\r\n    } else {\r\n      arrDownloadedImages.push(<GalleryItem\r\n        key={item.name}\r\n        name={item.name}\r\n        url={item.url}\r\n        hiden={false}\r\n        setModalProperties={setModalProperties}\r\n        setCurrentGalleryImage={setCurrentGalleryImage}\r\n        galleryImages={galleryImages}\r\n      />);\r\n    }\r\n  });\r\n  return arrDownloadedImages;\r\n}\r\n\r\nexport default addDownloadedImagesToArrforGallery;","import React from 'react';\r\n\r\nconst WorkplaceItem = ({ index, name, img, text, setModalProperties }) => {\r\n\r\n  const backgroundImage = {\r\n    backgroundImage: `url(${img})`\r\n  }\r\n\r\n  const dbClickHandler = (event) => {\r\n    event.preventDefault();\r\n    setModalProperties(prev => {\r\n      return (\r\n        {\r\n          ...prev,\r\n          isOpen: true,\r\n          type: \"setGalleryImageData\",\r\n          urlImg: img,\r\n          textImg: text,\r\n          indexImgInGallery: index\r\n        }\r\n      );\r\n    }\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"workplace-item\"\r\n      onDoubleClick={dbClickHandler}\r\n    >\r\n      <div className=\"workplace-item-name\">{name}</div>\r\n      <div className=\"workplace-item-img\" style={backgroundImage}></div>\r\n      <div className=\"workplace-item-text\">{text ? text : \"Введите описание иллюстрации\"}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WorkplaceItem;","import WorkplaceItem from '../../components/main/WorkplaceItem';\r\n\r\nfunction addSelectedImagesToArrForGallery(\r\n    galleryImages, //массив выбранных изображений для фототаблицы\r\n    arrGalleryImages, //массив для хранения React элементов\r\n    setModalProperties, //сеттер со свойствами модального окна\r\n) {\r\n    //Функция формирует массив с выбранными изображениями для фототаблицы.\r\n\r\n    galleryImages.forEach((item, index) => {\r\n        arrGalleryImages.unshift(<WorkplaceItem\r\n            key={index}\r\n            index={index}\r\n            name={`Иллюстрация ${arrGalleryImages.length + 1}`}\r\n            img={item.urlImg}\r\n            text={item.textImg}\r\n            setModalProperties={setModalProperties}\r\n        />);\r\n    });\r\n    return arrGalleryImages;\r\n}\r\n\r\nexport default addSelectedImagesToArrForGallery;","import React, { useState, createContext } from 'react';\r\nimport Container from './containers/Container';\r\nimport Header from './containers/Header';\r\nimport Logo from './components/header/Logo';\r\nimport Menu from './components/header/Menu';\r\nimport MenuItem from './components/header/MenuItem';\r\nimport Main from './containers/Main';\r\nimport Workplace from './components/main/Workplace';\r\nimport WorkplaceItemDataBtn from './components/main/WorkplaceItemDataBtn';\r\nimport WorkplaceItemNew from './components/main/WorkplaceItemNew';\r\nimport Gallery from './components/main/Gallery';\r\nimport Modal from './containers/Modal';\r\nimport './App.css';\r\n\r\nimport addDownloadedImagesToArrForGallery from './services/forApp/fAddDownloadedImagesToGallery.js';\r\nimport addSelectedImagesToArrForGallery from './services/forApp/fAddSelectedImagesToGallery';\r\n\r\nexport const modalDataContext = createContext();\r\n\r\nfunction App() {\r\n\r\n  const [downloadedImages, setDownloadedImages] = useState();\r\n  const [photoTableData, setphotoTableData] = useState({\r\n    numbOMP: null,\r\n    factOMP: null,\r\n    adressOMP: null,\r\n    dateOMP: null,\r\n    dateForDoc: null,\r\n    unit: \"№15 Симферопольский\",\r\n    kusp: null,\r\n    executor: \"Д.С. Ежель\"\r\n  });\r\n  const [settings, setSettings] = useState({\r\n    note: null,\r\n    executors: ['Д.Н. Арзяков', 'И.С. Васильев', 'Р.Г. Максименко', 'Ю.Г. Веринкиотов'],\r\n    unit: null\r\n  });\r\n  const [galleryImages, setGalleryImages] = useState([]);\r\n  const [currentGalleryImage, setCurrentGalleryImage] = useState({\r\n    nameImg: null,\r\n    urlImg: null,\r\n    textImg: null,\r\n    orientation: null\r\n  });\r\n  const [modalProperties, setModalProperties] = useState({\r\n    isOpen: false,\r\n    type: null,\r\n    nameImg: null,\r\n    urlImg: null,\r\n    textImg: null,\r\n    indexImgInGallery: null,\r\n    cut: false\r\n  });\r\n\r\n  let arrDownloadedImages = [];\r\n  let arrGalleryImages = [];\r\n\r\n  if (downloadedImages) {\r\n    //Функция формирует массив с загруженными изображениями.\r\n    arrDownloadedImages = addDownloadedImagesToArrForGallery(downloadedImages, arrDownloadedImages, galleryImages, setModalProperties, setCurrentGalleryImage);\r\n  };\r\n\r\n  if (galleryImages) {\r\n    //Функция формирует массив с выбранными изображениями для фототаблицы.\r\n    arrGalleryImages = addSelectedImagesToArrForGallery(galleryImages, arrGalleryImages, setModalProperties);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <modalDataContext.Provider\r\n        value={{ modalProperties, setModalProperties, galleryImages, setGalleryImages, photoTableData, setphotoTableData, settings, setSettings }}>\r\n        <Modal />\r\n      </modalDataContext.Provider>\r\n      <Header>\r\n        <Logo>ЭКЦ РК Фототаблица 0.1</Logo>\r\n        <Menu>\r\n          <MenuItem\r\n            type={'forInputFile'}\r\n            setDownloadedImages={setDownloadedImages}\r\n          >\r\n            Загрузить фотографии\r\n          </MenuItem>\r\n          <MenuItem notActive={true}>Печать</MenuItem>\r\n          <MenuItem notActive={true}>Конвертировать в PDF</MenuItem>\r\n          <MenuItem\r\n            type={'forConvertToMicrosoftWord'}\r\n            photoTableData={photoTableData}\r\n            galleryImages={galleryImages}\r\n          >Конвертировать в Microsoft Word</MenuItem>\r\n          <MenuItem\r\n            type={'forSettings'}\r\n            modalProperties={modalProperties}\r\n            setModalProperties={setModalProperties}\r\n          >Настройки</MenuItem>\r\n        </Menu>\r\n      </Header>\r\n      <Main>\r\n        <Gallery>\r\n          {arrDownloadedImages}\r\n        </Gallery>\r\n        <Workplace>\r\n          <WorkplaceItemDataBtn\r\n            photoTableData={photoTableData}\r\n            setModalProperties={setModalProperties}\r\n          />\r\n          <WorkplaceItemNew\r\n            name={`Иллюстрация ${arrGalleryImages.length + 1}`}\r\n            currentGalleryImage={currentGalleryImage}\r\n            galleryImages={galleryImages}\r\n            setGalleryImages={setGalleryImages}\r\n            downloadedImages={downloadedImages}\r\n            setDownloadedImages={setDownloadedImages}\r\n          />\r\n          {arrGalleryImages}\r\n        </Workplace>\r\n      </Main>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}